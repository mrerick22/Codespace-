name: SSHX Terminal Access

on:
  workflow_dispatch:
    inputs:
      session_duration:
        description: 'Dura√ß√£o da sess√£o em minutos'
        required: false
        default: '30'
        type: string

jobs:
  sshx-terminal:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup environment
      run: |
        echo "üöÄ Iniciando sess√£o SSHX..."
        echo "Sistema: $(uname -a)"
        echo "Usu√°rio: $(whoami)"
        
    - name: Install and start SSHX
      run: |
        echo "üì• Baixando e instalando SSHX..."
        curl -sSf https://sshx.io/get | sh
        
        echo "üîó Iniciando terminal compartilhado..."
        # Executa o sshx em background e captura o output
        timeout ${{ github.event.inputs.session_duration || '30' }}m sshx --shell /bin/bash 2>&1 | tee sshx_output.log &
        
        # Aguarda um momento para o sshx inicializar
        sleep 5
        
        # Procura pelo link na sa√≠da
        echo "üìã Procurando pelo link do terminal..."
        for i in {1..10}; do
          if grep -q "https://sshx.io/" sshx_output.log; then
            break
          fi
          echo "Tentativa $i/10 - Aguardando link..."
          sleep 2
        done
        
        # Extrai e exibe o link
        SSHX_LINK=$(grep -o "https://sshx.io/[a-zA-Z0-9]*" sshx_output.log | head -1)
        
        if [ -n "$SSHX_LINK" ]; then
          echo "‚úÖ Terminal SSHX dispon√≠vel!"
          echo "üîó Link: $SSHX_LINK"
          echo "SSHX_LINK=$SSHX_LINK" >> $GITHUB_ENV
          
          # Cria um arquivo com o link para f√°cil acesso
          echo "$SSHX_LINK" > sshx_link.txt
          
          # Exibe informa√ß√µes √∫teis
          echo ""
          echo "üìå INFORMA√á√ïES DA SESS√ÉO:"
          echo "- Link do terminal: $SSHX_LINK"
          echo "- Dura√ß√£o m√°xima: ${{ github.event.inputs.session_duration || '30' }} minutos"
          echo "- Sistema: Ubuntu Latest"
          echo "- Usu√°rio: runner"
          echo ""
          echo "üí° COMO USAR:"
          echo "1. Clique no link acima ou copie e cole no navegador"
          echo "2. Voc√™ ter√° acesso ao terminal do runner do GitHub Actions"
          echo "3. Use comandos bash normalmente"
          echo ""
          echo "‚ö†Ô∏è  AVISOS:"
          echo "- Esta sess√£o expirar√° automaticamente"
          echo "- N√£o execute comandos que possam danificar o ambiente"
          echo "- Cuidado com informa√ß√µes sens√≠veis"
        else
          echo "‚ùå N√£o foi poss√≠vel obter o link do SSHX"
          echo "üìã Log completo:"
          cat sshx_output.log
          exit 1
        fi
        
    - name: Keep session alive
      run: |
        echo "‚è≥ Mantendo sess√£o ativa por ${{ github.event.inputs.session_duration || '30' }} minutos..."
        echo "üîó Link do terminal: $SSHX_LINK"
        
        # Mant√©m o job ativo
        DURATION_SECONDS=$((${{ github.event.inputs.session_duration || '30' }} * 60))
        
        for ((i=1; i<=DURATION_SECONDS; i+=30)); do
          echo "‚è±Ô∏è  Sess√£o ativa h√° $(($i/60)) minuto(s) - Link: $SSHX_LINK"
          sleep 30
        done
        
        echo "‚è∞ Tempo limite atingido. Encerrando sess√£o..."
        
    - name: Upload session info
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sshx-session-info
        path: |
          sshx_link.txt
          sshx_output.log
        retention-days: 1
